#!/bin/bash
# Edit MMDVM log files
#
# editlog.sh [-options] [tg]
#
# options:  -s              sort by callsign
#           -d#             select for today's date (-d0 for today only, -d1 for yesterday ..)
#           -n              annotate with full name/location (implies sort)
#           -a              same as "-n"
#           -c {callsign}   select only this callsign
#           -ts#            select on Time Slot (1 or 2); only works for 2-timeslot hat's
#           -f [alt dir]    use alternate path/files for log files; arg must be quoted if wildcard used
#           -u              include summary list of users at end of report
#           -nt {hour}      net start time (24 hr); best used with -d option!
#           -l#             entries limited to "l" lines                (not implemented yet)
#           -x?             exclude ?                                   (not implemented yet)
#           -r              reverse ordering (similar to LH dashboard)  (not implemented yet)
#           -z              special net log
#
# examples:
#   sudo bash editlog.sh                 # list's all TG/CS in log order
#   sudo bash editlog.sh -s              # same as above, sorted by callsign
#   sudo bash editlog.sh 3113            # list only TG in log order
#   sudo bash editlog.sh -s 3113         # same as above, sorted by callsign
#   sudo bash editlog.sh -a              # list, sorted by callsigns with full name/location annotation
#   sudo bash editlog.sh -a 31131        # list, same as above but for one TG only
#   sudo bash editlog.sh -ts1            # list's all TG/CS in log order, Time Slot 1 only
#   sudo bash editlog.sh -d0 31134       # list one talk group, today's date only
#   sudo bash editlog.sh -d1 3101        # list one talk group, yesterday's date only
#   sudo bash editlog.sh -c m1abc        # select for specified callsign
#   sudo bash editlog.sh -nt20 -d0 3101  # select today's entries, 8pm or later 
#
#egrep -h "from|end|watchdog|lost" /var/log/pi-star/MMDVM-2020-09-10.log | sed '/\(CSBK\|overflow\|Downlink\)/d'
#sudo egrep -h "from|end|watchdog|lost" /var/log/pi-star/MMDVM-2020-09-10.log | sed '/^I:/d' | sed '/voice header/d' | sed 's/received network end of voice transmission from //g' | sed 's/DMR Slot /TS/g' | sed 's/to TG/ TG/g' > /tmp/afilex4
#
t1=$SECONDS
srt=0        # sort by callsign
f=""         # use alternate input file
excl=""
dt=0         # today's entries only
nl=0         # include full name/locations
ts=          # time slot
cs=          # callsign?
ul=0         # summary list of users
nt=0         # net time start
z=0          # special net?
#
# Process long options:
dx=0
hr=20
for arg in "$@"; do
  shift
  case "$arg" in
    -ts[12])   set -- "$@" "-t"  ; ts="TS${arg:3}";;
    -d[0-9]*)  set -- "$@" "-d"  ; dx=${arg:2};;
    -a)        set -- "$@" "-n"  ;;    # equiv -n
    -nt[0-9]*) set -- "$@" "-h"  ; hr=${arg:3};; 
    *)         set -- "$@" "$arg";;
  esac
done
#
# Process short options:
while getopts sx:f:dnutrlc:hz opt; do
  case $opt in
    s) srt=1;;
    x) excl=$OPTARG;;
    f) f=$OPTARG;;
    d) dt=1; dtx=$(date --date "-$dx day" +%Y-%m-%d);;
    n) nl=1; srt=1;;                # -n implies -s
    u) ul=1;;
    t) ;;     # ignore
    r) ;;     # not implemented
    l) ;;     # not implemented
    c) cs=$OPTARG;;
    h) nt=1;;
    z) z=1;;
  esac
done
shift $(($OPTIND - 1))
#
# gather up last 2-3 log files
if [ ! "$f" == "" ]; then
# sudo egrep -sh "transmission from| end |watchdog|lost" $f > /tmp/atmpfile2
  sudo egrep -sh "transmission from|watchdog" $f > /tmp/atmpfile2
else
# sudo egrep -sh "transmission from| end |watchdog|lost" /var/log/pi-star/MMDVM*.log > /tmp/atmpfile2
  sudo egrep -sh "transmission from|watchdog" /var/log/pi-star/MMDVM*.log > /tmp/atmpfile2
fi
#
# misc deletes
sudo sed -i -e '/^I:/d
                /^W:/d
                /voice header/d
                / network late entry /d
                /ended network data /d
                /ended RF data trans/d
                /received RF Data Preamble CSBK/d
                /received RF data header from /d
                /received RF late entry from /d
                /network watchdog has expired/d
                /received network CSBK Preamble CSBK/d
                /No reply from the modem/d
                /overflow in the DMR slot RF queue/d
                /Error returned from sendto, /d' /tmp/atmpfile2
#sudo sed -i '/^E:/d' /tmp/atmpfile2
#
# misc edits
sudo sed -i -e 's/, RSSI: .* dBm//g
                s/received RF end of voice transmission from //g
                s/received network end of voice transmission from //g
                s/received network data header from //g
                s/DMR Slot /TS/g
                s/to TG/ TG/g
                s/seconds, BER:/seconds,  -% packet loss, BER:/g' /tmp/atmpfile2
#               s/seconds, BER:/seconds,                , BER:/g' /tmp/atmpfile2
#               s/seconds, BER:/seconds,                  BER:/g' /tmp/atmpfile2
#
# trim hh:mm:ss
sudo sed -i -e 's|\([0-9]*:[0-9]*:[0-9]*\).[0-9]* |\1 |g
                s|, \([0-9] \)blocks|,   \1 blocks (SMS)|g' /tmp/atmpfile2
#
# normalize callsigns/DMR Id's, TG's, host cmds/parrots, durations
#awk -F" " '{printf("%-2s %-10s %-8s %-4s %-8s %-4s %6s %5s %8s %3s %6s %5s %4s %5s\n", $1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14)}' /tmp/atmpfile2 > /tmp/atmpfile3
#awk -F" " '{printf("%-2s %-10s %-8s %-4s %-8s TG %8s %5s %8s %3s packet %5s BER: %5s\n", $1,$2,$3,$4,$5,$7,$8,$9,$10,$12,$14)}' /tmp/atmpfile2 > /tmp/atmpfile3
#sudo cp /tmp/atmpfile3 /tmp/atmpfile2
#
# normalize callsigns/DMR Id's
sudo sed -i -e 's|, \([A-Z0-9]\{1\} \)|, \1      |g
                s|, \([A-Z0-9]\{2\} \)|, \1     |g
                s|, \([A-Z0-9]\{3\} \)|, \1    |g
                s|, \([A-Z0-9]\{4\} \)|, \1   |g
                s|, \([A-Z0-9]\{5\} \)|, \1  |g
                s|, \([A-Z0-9]\{6\} \)|, \1 |g' /tmp/atmpfile2
#
# normalize TG's
sudo sed -i -e 's|TG \([0-9]\{1\},\)|TG       \1|g
                s|TG \([0-9]\{2\},\)|TG      \1|g
                s|TG \([0-9]\{3\},\)|TG     \1|g
                s|TG \([0-9]\{4\},\)|TG    \1|g
                s|TG \([0-9]\{5\},\)|TG   \1|g
                s|TG \([0-9]\{6\},\)|TG  \1|g' /tmp/atmpfile2
#
# normalize host cmds/parrots
sudo sed -i -e 's|to \([0-9]\{2\},\)| RF      \1|g
                s|to \([0-9]\{3\},\)| RF     \1|g
                s|to \([0-9]\{4\},\)| RF    \1|g
                s|to \([0-9]\{5\},\)| RF   \1|g
                s|to \([0-9]\{6\},\)| RF  \1|g
                s|to \([0-9]\{7\},\)| RF \1|g' /tmp/atmpfile2
#
sudo sed -i -e 's|to \([A-Z0-9]\{1\},\)| RF       \1|g
                s|to \([A-Z0-9]\{2\},\)| RF      \1|g
                s|to \([A-Z0-9]\{3\},\)| RF     \1|g
                s|to \([A-Z0-9]\{4\},\)| RF    \1|g
                s|to \([A-Z0-9]\{5\},\)| RF   \1|g
                s|to \([A-Z0-9]\{6\},\)| RF  \1|g' /tmp/atmpfile2
#
# normalize duration
sudo sed -i -e 's|\( [0-9]\{1\}.[0-9] sec\)|  \1|g
                s|\( [0-9]\{2\}.[0-9] sec\)| \1|g' /tmp/atmpfile2
#
# normalize loss/BER
sudo sed -i -e 's|, \([0-9]% pac\)|,  \1|g
                s|BER: \([0-9].[0-9]\)|BER:  \1|g' /tmp/atmpfile2
#
# select for TG?
if [ "$1" ]; then
  sudo sed -i -e "/ $1, /!d" /tmp/atmpfile2
fi
#
# select for callsign?
if [ "$cs" ]; then
  cs=$(echo $cs | tr [a-z] [A-Z])
  sudo sed -i -e "/, $cs /!d" /tmp/atmpfile2
fi
#
# select for Time Slot?
if [ "$ts" ]; then
  n="$(grep -m 1 -o "TS1," /tmp/atmpfile2)$(grep -m 1 -o "TS2," /tmp/atmpfile2)"
  if [ ${#n} == 8 ]; then   # must be two slots to filter:
    sudo sed -i -e "/ $ts, /!d" /tmp/atmpfile2
  fi
fi
#
# convert timestamps to local zone
echo -n > /tmp/atmpfile2d
while read line
do
  echo ${line:0:3} $(date --date="${line:3:19} UTC" '+%Y-%m-%d %H:%M:%S') "${line:23}" >> /tmp/atmpfile2d
done < /tmp/atmpfile2
#
# selective date?
if [ $dt == 1 ]; then
# dtx=$(date -u '+%Y-%m-%d')
  sudo sed -i -e "/^M: $dtx /!d" /tmp/atmpfile2d
fi
#
# select net time start?
if [ $nt == 1 ]; then
  nawk -F" " -v hr=$hr 'substr($3,1,2) >= hr {print}' /tmp/atmpfile2d > /tmp/atmpfile2x
  sudo mv /tmp/atmpfile2x /tmp/atmpfile2d 
fi
#
# annotate with names?
if [ $nl == 1 ]; then
# cut -c29-37 /tmp/atmpfile2d | sort | uniq | sed -n '/^[0-9 ]*$/!p' > /tmp/atmpfile4 
  cut -c29-37 /tmp/atmpfile2d | sort | uniq                          > /tmp/atmpfile4 
  echo -n > /tmp/atmpfile5
  while read line
  do
#   x=$(grep -a -ie ",$line," -m 1 /usr/local/etc/DMRIds.xtd.dat 2> /dev/null | awk -F, '{printf("%-9s %-20.20s %-20.20s\n", $2,$3,$4)}')
#   x=$(grep -a -ie "$line,"  -m 1 /usr/local/etc/DMRIds.xtd.dat 2> /dev/null | awk -F, '{printf("%-9s %-20.20s %-20.20s %-4.4s %8.8s \n", $2,$3,$4,$5,$1)}')
#   x=$(grep -a -ie ",$line,\|^$line," -m 1 /usr/local/etc/DMRIds.xtd.dat 2> /dev/null | awk -F, '{printf("%-9s %-20.20s %-20.20s %-4.4s %8.8s \n", $2,$3,$4,$5,$1)}')
    x=$(grep -a -ie ",$line,\|^$line," -m 1 /usr/local/etc/DMRIds.xtd.dat 2> /dev/null | awk -F, 'function xsub(p1,p2) {if (p2 == "US" || p2 == "CAN") return p1; else return p2} {printf("%-9s %-20.20s %-20.20s %-4.4s %8.8s \n", $2,$3,$4,xsub($5,$6),$1)}')
    if [ "$x" ]; then
#     (if TG#, add "title" as name to file:)
      if [ "$(echo "$line " | sed '/^[A-Z]/d' | sed '/^[0-9]\{1,6\} /!d')" ]; then
        title=$(sed -n "s/^.*;.*;\(.*\);[PT].$line$/\1/p" /usr/local/etc/TGList_BM.txt)
        echo "Talk Group $line detected: $title"
        x=$(echo "$line $title" | awk '{printf("%-9s %-20.20s \n", $1,$2)}')
      fi
      echo "$x" >> /tmp/atmpfile5
#     if [ "$(echo "$line " | sed '/[0-9]\{7\} /!d')" ]; then
      if [ "${line//[0-9]/#}" == "#######" ]; then
        ncs=${x:0:7}
        echo "detected numeric call sign: " $line "-" $ncs
        ncs=${ncs/ /*}
        if [ "$ncs" ]; then
          sudo sed -i "s/, $line /, $ncs /g" /tmp/atmpfile2d
        fi
      fi
    fi
  done < /tmp/atmpfile4
  sort /tmp/atmpfile5 | uniq > /tmp/atmpfile6
# sudo rm -f /tmp/atmpfile4
  sudo rm -f /tmp/atmpfile5
fi
#
x=$(date +%F)
sudo mv /tmp/atmpfile2d /tmp/MMDVM-$x-editted.log
#
banner="==========================================================================================="
if [ "$1" ]; then
  title=$(echo "TG $1:" $(sed -n "s/^.*;.*;\(.*\);[PT].$1$/\1/p" /usr/local/etc/TGList_BM.txt))
  n=$((( 89 - "${#title}" ) / 2))
  rptname=$(echo "${banner:0:$n} $title ${banner:0:$n+1-(${#title}%2)}")
fi
#
# sorting/selecting
if [ $srt == 1 ]; then
#       CS:        TG:       yyyymmdd:  hhmmss:
# sort -k5.2,5.10 -k7.2,7.8 -k2.2,2.11 -k3.2,3.9 /tmp/MMDVM-$x-editted.log > /tmp/atmpfile2e
  sort -k5.2,5.10           -k2.2,2.11 -k3.2,3.9 /tmp/MMDVM-$x-editted.log > /tmp/atmpfile2e
  echo -n > /tmp/MMDVM-$x-sorted.log
  if [ "$1" ]; then
    echo -e "$rptname\n" > /tmp/MMDVM-$x-sorted.log
  else
    echo -e "$banner\n" > /tmp/MMDVM-$x-sorted.log
  fi
# space out callsigns after sort
  echo -n > /tmp/atmpfile8
  pline=""
  nlq=""
  sp="      0"
  while read line
  do
    nline=${line:28:8}           # callsign
    nlx=""
    if [ ! "$nline" == "$pline" ]; then
      if [ ! "$pline" == "" ]; then
        echo " " >> /tmp/MMDVM-$x-sorted.log
      fi
      if [ $nl == 1 ]; then
#       csx=$(grep -a "$nline" /tmp/atmpfile6)
#       nlx=${csx:10}
        nlx=$(grep -m 1 -a "^$nline" /tmp/atmpfile6 | cut -c10-57)
      fi
    fi 
    echo "$line $nlx" >> /tmp/MMDVM-$x-sorted.log
    if [ ! "$nline" == "$nlq" ]; then
      if [ ! "$nlq" == "" ]; then
        n=${#tot}
        echo "$nlq ${sp:0:6-$n}${tot::$n-1}.${tot:$n-1}" >> /tmp/atmpfile8
      fi
      nlq=$nline
      tot=0 
    fi
    tot=$(expr $tot + ${line:48:4}${line:53:1})
    pline=$nline
  done < /tmp/atmpfile2e
  if [ ! "$nlq" == "" ]; then
    n=${#tot}
    echo "$nlq ${sp:0:6-$n}${tot::$n-1}.${tot:$n-1}" >> /tmp/atmpfile8
  fi
  sudo rm -f /tmp/atmpfile2e
# echo "call signs found: $(sed -n '$=' /tmp/atmpfile6)"
# sudo rm -f /tmp/atmpfile6
  t2=$SECONDS
  if [ "$1" ]; then
    tg=$1
    sudo mv /tmp/MMDVM-$x-sorted.log /tmp/MMDVM-$x-sorted-$tg.log
#   echo -e "$rptname\n" > /tmp/MMDVM-$x-sorted-$tg.log
#   cat /tmp/MMDVM-$x-sorted.log >> /tmp/MMDVM-$x-sorted-$tg.log
#   echo -e "\n$rptname" $(($t2-$t1)) "secs" >> /tmp/MMDVM-$x-sorted-$tg.log
    echo -e "\n$rptname" >> /tmp/MMDVM-$x-sorted-$tg.log
#   cat <(echo -e "$rptname\n") /tmp/MMDVM-$x-sorted.log <(echo -e "\n$rptname") > /tmp/MMDVM-$x-sorted-$tg.log
    if [ $ul == 1 ]; then
      echo -n > /tmp/atmpfile7
      while read line
      do
        nline=${line:0:7}
        nline=${nline// /}
        nx="$(grep -a -m 1 -ie ",$nline," /usr/local/etc/DMRIds.xtd.dat 2> /dev/null)" 
        if [ "${nline//[0-9]/#}" == "#######" ]; then
          nc=${nx:-"$nline,???????,,,,"}   # numeric only; no call sign?
        else
          nc=${nx:-"???????,$nline,,,,"}   # call sign; no dmr id?
        fi
        echo $nc,${line:8:8} >> /tmp/atmpfile7
      done < /tmp/atmpfile8
      echo " " >> /tmp/MMDVM-$x-sorted-$tg.log
#                       dmrid cs   name  city  state country  time:
#     awk -F"," '{printf("%8s %-7s %-24s %-21s %-10s %-10s %8s secs\n", $1,$2,$3,$4,$5,$6,$7)}' /tmp/atmpfile7 >> /tmp/MMDVM-$x-sorted-$tg.log
      awk -F"," '{printf("%8s %-7s %-24.24s %-21.21s %-12.12s %-8.8s %8s secs\n", $1,$2,$3,$4,$5,$6,$7)}' /tmp/atmpfile7 >> /tmp/MMDVM-$x-sorted-$tg.log
      echo -e "\n $(wc -l /tmp/atmpfile7 | sed 's/^\([0-9]*\) .*/\1/g') users logged" >> /tmp/MMDVM-$x-sorted-$tg.log
      sudo rm -f /tmp/atmpfile7
    fi
    sudo nano /tmp/MMDVM-$x-sorted-$tg.log
    sudo rm -f /tmp/MMDVM-$x-sorted.log
    if [ $z == 1 ]; then
      y=$(date '+%m-%d-%y')
      f2="Lidnet-Netop-Log-$y.log"
#     sudo cp /tmp/MMDVM-$x-sorted-$tg.log /home/pi-star/$f2
#     sudo chown pi-star:pi-star /home/pi-star/$f2
      sudo cp /tmp/MMDVM-$x-sorted-$tg.log /tmp/$f2
      sudo chown pi-star:pi-star /tmp/$f2
      echo "Created: /tmp/$f2"
    fi
  else
    echo -e "\n$banner" >> /tmp/MMDVM-$x-sorted.log
    if [ $ul == 1 ]; then
      echo -n > /tmp/atmpfile7
      while read line
      do
        nline=${line:0:7}
        nline=${nline// /}
        nx="$(grep -a -m 1 -ie ",$nline," /usr/local/etc/DMRIds.xtd.dat 2> /dev/null)" 
        if [ "${nline//[0-9]/#}" == "#######" ]; then
          nc=${nx:-"$nline,???????,,,,"}   # numeric only; no call sign?
        else
          nc=${nx:-"???????,$nline,,,,"}   # call sign; no dmr id?
        fi
        echo $nc,${line:8:8} >> /tmp/atmpfile7
      done < /tmp/atmpfile8
      echo " " >> /tmp/MMDVM-$x-sorted.log
#                       dmrid cs   name  city  state country  time:
#     awk -F"," '{printf("%8s %-7s %-24s %-21s %-10s %-10s %8s secs\n", $1,$2,$3,$4,$5,$6,$7)}' /tmp/atmpfile7 >> /tmp/MMDVM-$x-sorted.log
      awk -F"," '{printf("%8s %-7s %-24.24s %-21.21s %-12.12s %-8.8s %8s secs\n", $1,$2,$3,$4,$5,$6,$7)}' /tmp/atmpfile7 >> /tmp/MMDVM-$x-sorted.log
      echo -e "\n $(wc -l /tmp/atmpfile7 | sed 's/^\([0-9]*\) .*/\1/g') users logged" >> /tmp/MMDVM-$x-sorted.log
      sudo rm -f /tmp/atmpfile7
    fi
    sudo nano /tmp/MMDVM-$x-sorted.log
  fi
  sudo rm -f /tmp/atmpfile4
  sudo rm -f /tmp/atmpfile6
  sudo rm -f /tmp/atmpfile8
else
  t2=$SECONDS
  if [ "$1" ]; then
    tg=$1
#   sudo mv /tmp/MMDVM-$x-editted.log /tmp/MMDVM-$x-editted-$tg.log
#   echo -e "$rptname\n" > /tmp/MMDVM-$x-editted-$tg.log
#   cat /tmp/MMDVM-$x-editted.log >> /tmp/MMDVM-$x-editted-$tg.log
#   echo -e "\n$rptname" >> /tmp/MMDVM-$x-editted-$tg.log
    cat <(echo -e "$rptname\n") /tmp/MMDVM-$x-editted.log <(echo -e "\n$rptname") > /tmp/MMDVM-$x-editted-$tg.log
    sudo nano /tmp/MMDVM-$x-editted-$tg.log
    sudo rm -f /tmp/MMDVM-$x-editted.log
  else
    sudo nano /tmp/MMDVM-$x-editted.log
  fi
fi
#
echo $(($t2-$t1)) "secs"
#
sudo rm -f /tmp/atmpfile2

